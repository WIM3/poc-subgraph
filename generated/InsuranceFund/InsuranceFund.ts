// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BorrowerChanged extends ethereum.Event {
  get params(): BorrowerChanged__Params {
    return new BorrowerChanged__Params(this);
  }
}

export class BorrowerChanged__Params {
  _event: BorrowerChanged;

  constructor(event: BorrowerChanged) {
    this._event = event;
  }

  get borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DistributionThresholdChanged extends ethereum.Event {
  get params(): DistributionThresholdChanged__Params {
    return new DistributionThresholdChanged__Params(this);
  }
}

export class DistributionThresholdChanged__Params {
  _event: DistributionThresholdChanged;

  constructor(event: DistributionThresholdChanged) {
    this._event = event;
  }

  get distributionThreshold(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeDistributed extends ethereum.Event {
  get params(): FeeDistributed__Params {
    return new FeeDistributed__Params(this);
  }
}

export class FeeDistributed__Params {
  _event: FeeDistributed;

  constructor(event: FeeDistributed) {
    this._event = event;
  }

  get surplus(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get insuranceFundCapacity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get insuranceFundFreeCollateral(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get distributionThreshold(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Repaid extends ethereum.Event {
  get params(): Repaid__Params {
    return new Repaid__Params(this);
  }
}

export class Repaid__Params {
  _event: Repaid;

  constructor(event: Repaid) {
    this._event = event;
  }

  get repaidAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenBalanceAfterRepaid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SurplusBeneficiaryChanged extends ethereum.Event {
  get params(): SurplusBeneficiaryChanged__Params {
    return new SurplusBeneficiaryChanged__Params(this);
  }
}

export class SurplusBeneficiaryChanged__Params {
  _event: SurplusBeneficiaryChanged;

  constructor(event: SurplusBeneficiaryChanged) {
    this._event = event;
  }

  get surplusBeneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VaultChanged extends ethereum.Event {
  get params(): VaultChanged__Params {
    return new VaultChanged__Params(this);
  }
}

export class VaultChanged__Params {
  _event: VaultChanged;

  constructor(event: VaultChanged) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InsuranceFund extends ethereum.SmartContract {
  static bind(address: Address): InsuranceFund {
    return new InsuranceFund("InsuranceFund", address);
  }

  candidate(): Address {
    let result = super.call("candidate", "candidate():(address)", []);

    return result[0].toAddress();
  }

  try_candidate(): ethereum.CallResult<Address> {
    let result = super.tryCall("candidate", "candidate():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  distributeFee(): BigInt {
    let result = super.call("distributeFee", "distributeFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_distributeFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "distributeFee",
      "distributeFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBorrower(): Address {
    let result = super.call("getBorrower", "getBorrower():(address)", []);

    return result[0].toAddress();
  }

  try_getBorrower(): ethereum.CallResult<Address> {
    let result = super.tryCall("getBorrower", "getBorrower():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDistributionThreshold(): BigInt {
    let result = super.call(
      "getDistributionThreshold",
      "getDistributionThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getDistributionThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDistributionThreshold",
      "getDistributionThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getInsuranceFundCapacity(): BigInt {
    let result = super.call(
      "getInsuranceFundCapacity",
      "getInsuranceFundCapacity():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getInsuranceFundCapacity(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInsuranceFundCapacity",
      "getInsuranceFundCapacity():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSurplusBeneficiary(): Address {
    let result = super.call(
      "getSurplusBeneficiary",
      "getSurplusBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSurplusBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSurplusBeneficiary",
      "getSurplusBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getToken(): Address {
    let result = super.call("getToken", "getToken():(address)", []);

    return result[0].toAddress();
  }

  try_getToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("getToken", "getToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVault(): Address {
    let result = super.call("getVault", "getVault():(address)", []);

    return result[0].toAddress();
  }

  try_getVault(): ethereum.CallResult<Address> {
    let result = super.tryCall("getVault", "getVault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class DistributeFeeCall extends ethereum.Call {
  get inputs(): DistributeFeeCall__Inputs {
    return new DistributeFeeCall__Inputs(this);
  }

  get outputs(): DistributeFeeCall__Outputs {
    return new DistributeFeeCall__Outputs(this);
  }
}

export class DistributeFeeCall__Inputs {
  _call: DistributeFeeCall;

  constructor(call: DistributeFeeCall) {
    this._call = call;
  }
}

export class DistributeFeeCall__Outputs {
  _call: DistributeFeeCall;

  constructor(call: DistributeFeeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get tokenArg(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class SetDistributionThresholdCall extends ethereum.Call {
  get inputs(): SetDistributionThresholdCall__Inputs {
    return new SetDistributionThresholdCall__Inputs(this);
  }

  get outputs(): SetDistributionThresholdCall__Outputs {
    return new SetDistributionThresholdCall__Outputs(this);
  }
}

export class SetDistributionThresholdCall__Inputs {
  _call: SetDistributionThresholdCall;

  constructor(call: SetDistributionThresholdCall) {
    this._call = call;
  }

  get distributionThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDistributionThresholdCall__Outputs {
  _call: SetDistributionThresholdCall;

  constructor(call: SetDistributionThresholdCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetSurplusBeneficiaryCall extends ethereum.Call {
  get inputs(): SetSurplusBeneficiaryCall__Inputs {
    return new SetSurplusBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetSurplusBeneficiaryCall__Outputs {
    return new SetSurplusBeneficiaryCall__Outputs(this);
  }
}

export class SetSurplusBeneficiaryCall__Inputs {
  _call: SetSurplusBeneficiaryCall;

  constructor(call: SetSurplusBeneficiaryCall) {
    this._call = call;
  }

  get surplusBeneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSurplusBeneficiaryCall__Outputs {
  _call: SetSurplusBeneficiaryCall;

  constructor(call: SetSurplusBeneficiaryCall) {
    this._call = call;
  }
}

export class SetVaultCall extends ethereum.Call {
  get inputs(): SetVaultCall__Inputs {
    return new SetVaultCall__Inputs(this);
  }

  get outputs(): SetVaultCall__Outputs {
    return new SetVaultCall__Outputs(this);
  }
}

export class SetVaultCall__Inputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }

  get vaultArg(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVaultCall__Outputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall extends ethereum.Call {
  get inputs(): UpdateOwnerCall__Inputs {
    return new UpdateOwnerCall__Inputs(this);
  }

  get outputs(): UpdateOwnerCall__Outputs {
    return new UpdateOwnerCall__Outputs(this);
  }
}

export class UpdateOwnerCall__Inputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall__Outputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}
